# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock

    - name: Build
      working-directory: gowebapp/web-api
      run: go build -v ./...

    - name: Test
      working-directory: gowebapp/web-api
      run: go test -v ./...

    - name: Build and Push Docker logfire/gowebapi:latest
      uses: abhiKrs/docker-build-push@v2
      with:
        context: gowebapp/web-api
        push: true
        registry: https://hub.docker.com/repository/docker/abhi1insphere/test-repo/general
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

   # - name: Build and Push Docker logfire/filter-service:latest
    #  uses: docker/build-push-action@v2
     # with:
      #  context: gowebapp/filter-service
       # push: true
        #tags: itshanifas/filter-service:latest
       # registry: docker.io
     # env:
      #  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
       # DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    #- name: Build and Push Docker logfire/livetail:latestdocker/build-push-action@v2
     # uses: docker/build-push-action@v2
     # with:
      #  context: gowebapp/livetail
       # push: true
       # tags: itshanifas/livetail:latest
       # registry: docker.io
     # env:
      #  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
       # DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

   # - name: Build and Push Docker logfire/notification:latest
    #  uses: docker/build-push-action@v2
    #  with:
     #   context: gowebapp/notification
     #   push: true
      #  tags: itshanifas/notification:latest
       # registry: docker.io
     # env:
       # DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Setup SSH authentication
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
